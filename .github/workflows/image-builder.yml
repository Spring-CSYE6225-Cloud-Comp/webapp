
name: Build Image with Packer

on:
  pull_request_target:
    branches:
     - demo1
    types: [closed]
  # workflow_dispatch
 

jobs:
  Image-Packer:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Create Zip Archive
        run: |
          zip -r Neha_Shende_002783740_05.zip ./

      - name: Initialize MYSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          sudo systemctl start mysql
          sudo systemctl status mysql

      - name: Initialize database
        run: |
          mysql -u ${{ secrets.DB_USER }} -p${{ secrets.DB_PASSWORD }} -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.DB_NAME }};"
          echo "MySQL database '${{ secrets.DB_NAME }}' has been created/initialized."
          echo "Inside following repo- '$(pwd)''"

      - name: Set up environment variables
        run: |
          echo "PORT=${{ secrets.PORT }}" > ${{ github.workspace }}/.env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> ${{ github.workspace }}/.env
          echo "DB_USER=${{ secrets.DB_USER }}" >> ${{ github.workspace }}/.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> ${{ github.workspace }}/.env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> ${{ github.workspace }}/.env
          echo "Contents of .env file:"
          cat ${{ github.workspace }}/.env

      - name: Set up NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: 14  

      - name: Install Dependencies
        run: npm install

      - name: Run tests
        run: npm run test:integration

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'


      - name: Build AMI
        run: |
          packer init gcp-centos.pkr.hcl
          packer fmt gcp-centos.pkr.hcl
          packer validate gcp-centos.pkr.hcl
          packer build gcp-centos.pkr.hcl